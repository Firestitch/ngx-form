@use '@angular/material' as mat;

.fs-form {

  .mat-form-field.mat-form-field-should-float {
    .fs-form-label-required:after {
      content: " *";
      white-space: pre-wrap;
    }

  }

  .fs-form-wrapper.ng-invalid.ng-dirty .fs-form-label,
  .ng-invalid.ng-dirty:not(form) .fs-form-label {
    color: #f44336;
  }
  
  .ng-invalid.ng-dirty:not(form) .mat-form-field-underline {
    background-color: #f44336;
  }
  
  .fs-form-error {
    color: #f44336;
  }
  
  .mat-placeholder-required {
    display: none;
  }
  
  button.submit-success,
  button.submit-error,
  button.submit-process {
    transition: none;
    cursor: wait;
    color: transparent !important;
    pointer-events: none;
  
    svg {
      height: 22px;
      vertical-align: middle;
      width: 22px;
      text-align: center;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      animation: fadein 1s;
    }
  }
  
  .mat-button {
    svg.svg-icon-process {
      stroke: #a3a3a3;
    }
  
    svg.svg-icon-error path,
    svg.svg-icon-success path {
      fill: #a3a3a3;
    }
  }
  
}

@keyframes fadein {
  from { opacity: 0; }
  to   { opacity: 1; }
}


@mixin fs-form($theme) {
  $primary: map-get($theme, primary);
  $foreground: map-get($theme, foreground);
  $is-dark-theme: map-get($theme, is-dark);

  // hack for material form field
  .mat-form-field.mat-form-field-invalid.ng-valid .mat-form-field-ripple {
    background-color: mat.m2-get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));
  }

  // hack for material form field
  .mat-form-field.mat-form-field-invalid.ng-valid .mat-form-field-label {
    color: map-get($foreground, secondary-text);
  }

  .fs-form button {

    &.mat-button,
    &.mat-raised-button:not([color='primary']),
    &.mat-flat-button:not([color='primary']) {
      svg.svg-icon-process {
        stroke: mat.m2-get-color-from-palette($primary);
      }

      svg.svg-icon-error path,
      svg.svg-icon-success path {
        fill: mat.m2-get-color-from-palette($primary);
      }
    }

    &.mat-raised-button[color='primary'],
    &.mat-flat-button[color='primary'] {
      svg.svg-icon-process {
        stroke: #fff;
      }

      svg.svg-icon-error path,
      svg.svg-icon-success path {
        fill: #fff;
      }
    }
  }
}
